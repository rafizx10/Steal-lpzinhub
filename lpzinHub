-- Delta Executor - Brainrot Auto Return Script
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local character = player.Character
if not character then
	player.CharacterAdded:Wait()
	character = player.Character
end

local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- CONFIG
local autoReturnEnabled = false
local flySpeed = 100
local maxFlySpeed = 1156
local isFlying = false
local spawnLocation = humanoidRootPart.CFrame

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BrainrotGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main Panel
local panel = Instance.new("Frame")
panel.Name = "MainPanel"
panel.Size = UDim2.new(0, 300, 0, 400)
panel.Position = UDim2.new(0, 50, 0, 50)
panel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
panel.BorderSizePixel = 2
panel.BorderColor3 = Color3.fromRGB(255, 100, 0)
panel.Parent = screenGui

-- Title
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 40)
titleLabel.BackgroundColor3 = Color3.fromRGB(255, 100, 0)
titleLabel.Text = "DELTA BRAINROT"
titleLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
titleLabel.TextSize = 18
titleLabel.Font = Enum.Font.GothamBold
titleLabel.BorderSizePixel = 0
titleLabel.Parent = panel

-- Status Label
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, -20, 0, 50)
statusLabel.Position = UDim2.new(0, 10, 0, 50)
statusLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
statusLabel.Text = "Status: Pronto"
statusLabel.TextColor3 = Color3.fromRGB(0, 255, 100)
statusLabel.TextSize = 14
statusLabel.TextWrapped = true
statusLabel.BorderSizePixel = 1
statusLabel.BorderColor3 = Color3.fromRGB(0, 255, 100)
statusLabel.Parent = panel

-- Auto Return Button
local autoReturnBtn = Instance.new("TextButton")
autoReturnBtn.Size = UDim2.new(1, -20, 0, 40)
autoReturnBtn.Position = UDim2.new(0, 10, 0, 115)
autoReturnBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
autoReturnBtn.Text = "AUTO RETURN: OFF"
autoReturnBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
autoReturnBtn.TextSize = 14
autoReturnBtn.Font = Enum.Font.GothamBold
autoReturnBtn.BorderSizePixel = 2
autoReturnBtn.BorderColor3 = Color3.fromRGB(255, 100, 0)
autoReturnBtn.Parent = panel

-- Speed Label
local speedTextLabel = Instance.new("TextLabel")
speedTextLabel.Size = UDim2.new(1, -20, 0, 30)
speedTextLabel.Position = UDim2.new(0, 10, 0, 170)
speedTextLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
speedTextLabel.Text = "Speed: " .. flySpeed .. " / " .. maxFlySpeed
speedTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
speedTextLabel.TextSize = 12
speedTextLabel.BorderSizePixel = 0
speedTextLabel.Parent = panel

-- Speed Slider
local sliderBg = Instance.new("Frame")
sliderBg.Size = UDim2.new(1, -20, 0, 20)
sliderBg.Position = UDim2.new(0, 10, 0, 210)
sliderBg.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
sliderBg.BorderSizePixel = 1
sliderBg.BorderColor3 = Color3.fromRGB(100, 100, 100)
sliderBg.Parent = panel

local slider = Instance.new("TextButton")
slider.Size = UDim2.new(0, 20, 1, 0)
slider.Position = UDim2.new(0, 0, 0, 0)
slider.BackgroundColor3 = Color3.fromRGB(255, 100, 0)
slider.Text = ""
slider.BorderSizePixel = 1
slider.BorderColor3 = Color3.fromRGB(255, 255, 255)
slider.Parent = sliderBg

-- Log
local logLabel = Instance.new("TextLabel")
logLabel.Size = UDim2.new(1, -20, 0, 120)
logLabel.Position = UDim2.new(0, 10, 0, 250)
logLabel.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
logLabel.Text = "Log:\nScript iniciado..."
logLabel.TextColor3 = Color3.fromRGB(0, 255, 150)
logLabel.TextSize = 10
logLabel.TextWrapped = true
logLabel.TextXAlignment = Enum.TextXAlignment.Left
logLabel.TextYAlignment = Enum.TextYAlignment.Top
logLabel.BorderSizePixel = 1
logLabel.BorderColor3 = Color3.fromRGB(0, 255, 150)
logLabel.Parent = panel

local function addLog(text)
	logLabel.Text = text .. "\n" .. logLabel.Text
end

-- Find Spawn
local function getSpawn()
	for _, obj in pairs(workspace:GetDescendants()) do
		if obj.Name:lower():find("spawn") and obj:IsA("BasePart") then
			return obj.CFrame + Vector3.new(0, 3, 0)
		end
	end
	return humanoidRootPart.CFrame
end

-- Teleport com velocidade
local function teleportToSpawn()
	local spawn = getSpawn()
	local startPos = humanoidRootPart.Position
	local endPos = spawn.Position
	local distance = (endPos - startPos).Magnitude
	local time = distance / flySpeed
	
	addLog("Voando para spawn...")
	
	local steps = 0
	local maxSteps = 100
	
	while (humanoidRootPart.Position - endPos).Magnitude > 5 and steps < maxSteps do
		local direction = (endPos - humanoidRootPart.Position).Unit
		humanoidRootPart.CFrame = humanoidRootPart.CFrame + direction * (flySpeed / 60)
		steps = steps + 1
		task.wait(1/60)
	end
	
	-- Pousa suavemente
	humanoidRootPart.CFrame = spawn
	addLog("Chegou ao spawn!")
end

-- Detectar brainrot roubado
local function monitorBrainrot()
	while autoReturnEnabled do
		local backpack = character:FindFirstChild("Backpack")
		if backpack then
			for _, item in pairs(backpack:GetChildren()) do
				if item.Name:lower():find("brain") or item.Name:lower():find("brainrot") then
					addLog("Brainrot detectado!")
					teleportToSpawn()
					task.wait(2)
				end
			end
		end
		task.wait(0.5)
	end
end

-- Auto Return Button Click
autoReturnBtn.MouseButton1Click:Connect(function()
	autoReturnEnabled = not autoReturnEnabled
	
	if autoReturnEnabled then
		autoReturnBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
		autoReturnBtn.Text = "AUTO RETURN: ON âœ“"
		addLog("Auto Return ATIVADO")
		spawnLocation = getSpawn()
		task.spawn(monitorBrainrot)
	else
		autoReturnBtn.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
		autoReturnBtn.Text = "AUTO RETURN: OFF"
		addLog("Auto Return DESATIVADO")
	end
end)

-- Speed Slider
local dragging = false
UserInputService.InputBegan:Connect(function(input, gp)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		if mouse.Target == slider then
			dragging = true
		end
	end
end)

UserInputService.InputChanged:Connect(function(input, gp)
	if dragging and input.UserInputType == Enum.UserInputType.Mouse then
		local mouse = Players:FindFirstChild("Mouse") or player:GetMouse()
		local mouseX = mouse.X
		local sliderX = sliderBg.AbsolutePosition.X
		local sliderWidth = sliderBg.AbsoluteSize.X
		
		local percentage = math.clamp((mouseX - sliderX) / sliderWidth, 0, 1)
		flySpeed = math.floor(percentage * maxFlySpeed)
		
		slider.Position = UDim2.new(percentage - 0.07, 0, 0, 0)
		speedTextLabel.Text = "Speed: " .. flySpeed .. " / " .. maxFlySpeed
	end
end)

UserInputService.InputEnded:Connect(function(input, gp)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
	end
end)

-- Respawn
player.CharacterAdded:Connect(function(newChar)
	character = newChar
	humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	humanoid = character:WaitForChild("Humanoid")
	addLog("Respawned")
end)

addLog("Script pronto!")

-- Loop infinito
while true do
	task.wait(1)
end
